{
  "_from": "typechecker@7.10.0",
  "_id": "typechecker@7.10.0",
  "_inBundle": false,
  "_integrity": "sha512-e7yzPyPe1FGiyt8YwvxsZcR5/BI/RjRkfSQ9S0ilCBYFPED7qQ09dN0mpq6MlM67Vo+zRbfXc6ghYNYwBpQoaw==",
  "_location": "/extendr/typechecker",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "typechecker@7.10.0",
    "name": "typechecker",
    "escapedName": "typechecker",
    "rawSpec": "7.10.0",
    "saveSpec": null,
    "fetchSpec": "7.10.0"
  },
  "_requiredBy": [
    "/extendr"
  ],
  "_resolved": "https://registry.npmjs.org/typechecker/-/typechecker-7.10.0.tgz",
  "_shasum": "774e3dca5b4d328bcf843e382f794ad9a5b6fce4",
  "_spec": "typechecker@7.10.0",
  "_where": "/Users/georgiyazovaliyski/Projects/ConPharma/TSFileMonitoring/monitoring-ts/node_modules/extendr",
  "author": {
    "name": "2013+ Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "githubsponsors",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "githubSponsorsUsername": "balupton",
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "travisTLD": "com",
      "githubUsername": "bevry",
      "githubRepository": "typechecker",
      "githubSlug": "bevry/typechecker",
      "npmPackageName": "typechecker"
    }
  },
  "browser": "edition-browsers/index.js",
  "bugs": {
    "url": "https://github.com/bevry/typechecker/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    },
    {
      "name": "Joe Gesualdo",
      "email": "joegesualdo@gmail.com",
      "url": "https://github.com/joegesualdo"
    },
    {
      "name": "Matt Bierner",
      "url": "https://github.com/mjbvz"
    },
    {
      "name": "Sean Fridman",
      "email": "mail@seanfridman.com",
      "url": "https://github.com/sfrdmn"
    }
  ],
  "deno": "edition-deno/index.ts",
  "deprecated": false,
  "description": "Utilities to get and check variable types (isString, isPlainObject, isRegExp, etc)",
  "devDependencies": {
    "@bevry/update-contributors": "^1.12.0",
    "@typescript-eslint/eslint-plugin": "^3.4.0",
    "@typescript-eslint/parser": "^3.4.0",
    "assert-helpers": "^6.12.0",
    "eslint": "^7.3.1",
    "eslint-config-bevry": "^3.12.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "kava": "^5.7.0",
    "make-deno-edition": "^0.13.0",
    "prettier": "^2.0.5",
    "projectz": "^2.10.1",
    "surge": "^0.21.3",
    "typedoc": "^0.17.7",
    "typescript": "^3.9.5",
    "valid-directory": "^2.5.0",
    "valid-module": "^1.7.0"
  },
  "editions": [
    {
      "description": "TypeScript source code with Import for modules",
      "directory": "source",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "TypeScript compiled against ESNext for Node.js with Require for modules",
      "directory": "edition-esnext",
      "entry": "index.js",
      "tags": [
        "javascript",
        "esnext",
        "require"
      ],
      "engines": {
        "node": "10 || 12 || 13 || 14",
        "browsers": false
      }
    },
    {
      "description": "TypeScript compiled against ES2019 for web browsers with Import for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "javascript",
        "import"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    },
    {
      "description": "TypeScript source code made to be compatible with Deno",
      "directory": "edition-deno",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import",
        "deno"
      ],
      "engines": {
        "deno": true,
        "browsers": true
      }
    }
  ],
  "engines": {
    "node": ">=10"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "funding": "https://bevry.me/fund",
  "homepage": "https://github.com/bevry/typechecker",
  "keywords": [
    "array",
    "assert",
    "assertion",
    "async",
    "async function",
    "async-function",
    "asyncFunction",
    "bool",
    "boolean",
    "browser",
    "check",
    "check-type",
    "checking",
    "class",
    "class-identifier",
    "class-instance",
    "compare",
    "conventional class",
    "conventional-class",
    "conventionalClass",
    "date",
    "define-type",
    "deno",
    "deno-edition",
    "deno-entry",
    "denoland",
    "empty",
    "empty array",
    "empty keys",
    "empty map",
    "empty plain object",
    "empty-array",
    "empty-keys",
    "empty-map",
    "empty-plain-object",
    "emptyArray",
    "emptyKeys",
    "emptyMap",
    "emptyPlainObject",
    "error",
    "function",
    "get object type",
    "get type",
    "get-object-type",
    "get-type",
    "getObjectType",
    "getType",
    "instanceof",
    "is",
    "is arguments",
    "is array",
    "is async",
    "is async function",
    "is bool",
    "is boolean",
    "is class",
    "is conventional class",
    "is date",
    "is empty array",
    "is empty keys",
    "is empty map",
    "is empty plain object",
    "is empty weak map",
    "is error",
    "is function",
    "is map",
    "is native class",
    "is null",
    "is nullish",
    "is number",
    "is object",
    "is plain object",
    "is regexp",
    "is string",
    "is sync",
    "is sync function",
    "is undefined",
    "is weak map",
    "is-arguments",
    "is-array",
    "is-async",
    "is-async-function",
    "is-bool",
    "is-boolean",
    "is-class",
    "is-conventional-class",
    "is-date",
    "is-empty-array",
    "is-empty-keys",
    "is-empty-map",
    "is-empty-plain-object",
    "is-empty-weak-map",
    "is-error",
    "is-function",
    "is-map",
    "is-native-class",
    "is-null",
    "is-nullish",
    "is-number",
    "is-object",
    "is-plain-obj",
    "is-plain-object",
    "is-regexp",
    "is-string",
    "is-sync",
    "is-sync-function",
    "is-undefined",
    "is-weak-map",
    "isArguments",
    "isArray",
    "isAsyncFunction",
    "isBool",
    "isBoolean",
    "isClass",
    "isConventionalClass",
    "isDate",
    "isEmptyArray",
    "isEmptyKeys",
    "isEmptyMap",
    "isEmptyPlainObject",
    "isEmptyWeakMap",
    "isError",
    "isFunction",
    "isMap",
    "isNativeClass",
    "isNull",
    "isNullish",
    "isNumber",
    "isObject",
    "isRegExp",
    "isString",
    "isSync",
    "isSyncFunction",
    "isUndefined",
    "isWeakMap",
    "javascript",
    "javascript-type",
    "keys",
    "kind",
    "map",
    "module",
    "native",
    "native class",
    "native-class",
    "nativeClass",
    "node",
    "null",
    "number",
    "object",
    "plain",
    "plain object",
    "plain objects",
    "plain-object",
    "plain-objects",
    "plainObject",
    "primitive",
    "primitive-types",
    "pure",
    "regex",
    "regexp",
    "regular expression",
    "simple",
    "string",
    "sync",
    "syncFunction",
    "test",
    "type",
    "type-check",
    "type-checker",
    "type-checking",
    "typechecker",
    "typed",
    "typeguards",
    "typeof",
    "types",
    "typescript",
    "undefined",
    "util",
    "utility",
    "validate",
    "validation",
    "vanilla",
    "verify",
    "weak map",
    "weak-map",
    "weakMap",
    "what-type"
  ],
  "license": "MIT",
  "main": "edition-esnext/index.js",
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "module": "edition-browsers/index.js",
  "name": "typechecker",
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bevry/typechecker.git"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "yarn run our:compile:deno && yarn run our:compile:edition-browsers && yarn run our:compile:edition-esnext && yarn run our:compile:types",
    "our:compile:deno": "make-deno-edition --attempt",
    "our:compile:edition-browsers": "tsc --module ESNext --target ES2019 --outDir ./edition-browsers --project tsconfig.json && ( test ! -d edition-browsers/source || ( mv edition-browsers/source edition-temp && rm -Rf edition-browsers && mv edition-temp edition-browsers ) )",
    "our:compile:edition-esnext": "tsc --module commonjs --target ESNext --outDir ./edition-esnext --project tsconfig.json && ( test ! -d edition-esnext/source || ( mv edition-esnext/source edition-temp && rm -Rf edition-esnext && mv edition-temp edition-esnext ) )",
    "our:compile:types": "tsc --project tsconfig.json --emitDeclarationOnly --declaration --declarationMap --declarationDir ./compiled-types && ( test ! -d compiled-types/source || ( mv compiled-types/source edition-temp && rm -Rf compiled-types && mv edition-temp compiled-types ) )",
    "our:deploy": "echo no need for this project",
    "our:meta": "yarn run our:meta:contributors && yarn run our:meta:docs && yarn run our:meta:projectz",
    "our:meta:contributors": "update-contributors",
    "our:meta:docs": "yarn run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --mode file --exclude '**/+(*test*|node_modules)' --excludeExternals --name \"$npm_package_name\" --readme ./README.md --out ./docs ./source",
    "our:meta:projectz": "projectz compile",
    "our:release": "yarn run our:release:prepare && yarn run our:release:check-changelog && yarn run our:release:check-dirty && yarn run our:release:tag && yarn run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "yarn run our:clean && yarn run our:compile && yarn run our:test && yarn run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "yarn run our:setup:install",
    "our:setup:install": "/usr/local/bin/yarn install --ignore-engines",
    "our:test": "yarn run our:verify && yarn test",
    "our:verify": "yarn run our:verify:directory && yarn run our:verify:eslint && yarn run our:verify:module && yarn run our:verify:prettier",
    "our:verify:directory": "valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:module": "valid-module",
    "our:verify:prettier": "prettier --write .",
    "test": "node ./edition-esnext/test.js"
  },
  "title": "TypeChecker",
  "type": "commonjs",
  "types": "./compiled-types/",
  "version": "7.10.0"
}
